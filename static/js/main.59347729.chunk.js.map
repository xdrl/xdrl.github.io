{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","state","setState","kmn","setKmn","tabell","setTabell","kommun","setKommun","selected","setSelected","selectHidden","setSelectHidden","kyrka","setKyrka","visible","setVisible","kyrkselect","setKyrkSelect","avdrag","lon","costs","setCosts","useEffect","readRemoteFile","complete","results","data","uniq","console","log","tmp","tmp2","map","v","indexOf","push","sort","handleKyrkaSelect","event","newMap","target","value","substring","handleLon","handleChange","Number","x","newLon","fastkommun","isNaN","replace","Sel2","Select","className","native","onChange","name","String","Math","round","KyrkSelect","grej","filter","y","Fade","in","timeout","Paper","Typography","variant","TextField","autoComplete","id","InputProps","endAdornment","InputAdornment","position","label","Checkbox","checked","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.59347729.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { readRemoteFile } from 'react-papaparse'\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\nfunction App() {\n  const [state, setState] = useState(['a']);\n  const [kmn, setKmn] = useState();\n  const [tabell, setTabell] = useState([]);\n  const [kommun, setKommun] = useState(['',29])\n  const [selected, setSelected] = useState(1)\n  const [selectHidden, setSelectHidden] = useState(true)\n  const [kyrka, setKyrka] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [kyrkselect, setKyrkSelect] = useState();\n  const [costs, setCosts] = useState({\n    avdrag: 0,\n    lon: 0\n  })\n  useEffect(() => {\n    readRemoteFile(\n      \"/skattesatser-2020.csv\",\n      {\n        complete: (results) => {\n          setState(results.data)\n          let uniq = [...results.data]\n          console.log(uniq)\n          let tmp = []\n          let tmp2 = []\n          uniq.map(v => {\n            if(tmp.indexOf(v[2]) === -1){\n              tmp.push(v[2])\n              tmp2.push([v[2],v[5]])\n            }\n          })\n          tmp2 = tmp2.sort()\n          console.log(tmp2)\n          setKmn(tmp2)\n        }\n      }\n    );\n    readRemoteFile(\n      \"/allmanna-tabeller-manad-2020.csv\",\n      {\n        complete: (results) => {\n          setTabell(results.data)\n         // console.log(results.data)\n          \n        }\n      }\n    )\n  }, [])\n\n  const handleKyrka = () => {\n   // handleLon(costs.lon, kyrka ? 4 : 5)\n    setKyrka(!kyrka)\n    \n\n  }\n\n  const handleKyrkaSelect = (event) => {\n    let newMap = [...kommun]\n    setKyrkSelect(event.target.value)\n    newMap[1] = event.target.value.substring(0,2)\n    setKommun(newMap)\n    handleLon(costs.lon, kyrka ? 4 : 5, event.target.value.substring(0,2))\n  }\n\n  const handleChange = (event) => {\n    setVisible(true)\n    \n    let tmp = Number((event.target.value).substring(0,2))\n    setSelected(event.target.value)\n    tabell.map(x => {\n      if((Number(x[1]) === Number(tmp)) && (Number(costs.lon) >= Number(x[2])) && (Number(costs.lon) <= Number(x[3]))){\n        setKommun(x)\n        setCosts({...costs, avdrag: Number(x[4])})\n        console.log(x)\n      }\n\n    })\n  }\n\n  const handleLon = (newLon, kyrka, fastkommun) => {\n    if(isNaN(newLon)) newLon = Number(newLon.replace(/\\D/g,''));\n    setSelectHidden(false);\n    let tmp = {...costs};\n    tmp.lon = newLon;\n    setCosts(tmp)\n    tabell.map(x => {\n      if((Number(x[1]) === (fastkommun ? Number(fastkommun) :Number(kommun[1]))) && (newLon >= Number(x[2])) && (newLon <= Number(x[3]))){\n        setKommun(x)\n        tmp.avdrag = Number(x[kyrka])\n        setCosts(tmp)\n      }\n\n    })\n\n  }\n\n\n  const Sel2 = () => {\n\n    return (        \n    <Select\n    className=\"selects\"\n      native\n      value={selected}\n      onChange={handleChange}\n    >\n      {kmn.map(v => <option name={v[0]} value={String(Math.round(v[1])) + v[0]}>{v[0]}</option>)}\n    </Select>)\n  }\n\n  const KyrkSelect = () => {\n    console.log(selected.substring(2))\n    let grej = state.filter(v => v[2] === selected.substring(2))\n    grej = grej.sort((x,y) => (x > y))\n    return (\n      <Select\n      className=\"selects\"\n      native\n      onChange={handleKyrkaSelect}\n      value={kyrkselect}\n      \n      >\n        <option value=\"33none\">Välj församling</option>\n        {grej.map(v => <option name={v[3]} value={String(Math.round(v[4])) + v[3]}>{v[3]}</option>)}\n\n\n      </Select>\n\n\n    )\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Fade in={true} timeout={1000}>\n          <Paper className=\"App-Paper\">\n            <Typography variant=\"h4\">Lönekalkylator</Typography>\n            <Typography variant=\"subtitle1\">\n                Fyll i din nuvarande månadslön för att se din uppskattade nettolön för 2020\n            </Typography>\n          <TextField \n          autoComplete=\"off\" \n          className=\"selects\" \n          id=\"standard-basic\" \n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">Kr</InputAdornment>,\n          }}\n          onChange={(event) => handleLon(event.target.value, 4)} label=\"Månadslön\"/>\n          {selectHidden ? \"\" :\n          <Fade in={true} timeout={2000}>\n          <div>\n            \n            <Sel2 />\n            <br />\n            <Fade in={visible} timeout={1000}>\n            <div>\n\n              <p className=\"lesser\"> \n                <Checkbox\n                checked={kyrka}\n                onChange={handleKyrka}\n                name=\"checkedB\"\n                color=\"primary\"\n                label=\"Medlem i svenska kyrkan?\"\n              /> Medlem i Svenska kyrkan?\n              </p>\n            </div>\n            </Fade> \n            \n            \n        </div>\n        </Fade>\n          }\n          {kyrka ? \n            <Fade in={true} timeout={1000}>\n            <div>\n            <KyrkSelect />\n            </div>\n            </Fade>\n        \n          : \"\"}\n\n          \n          <Fade in={visible} timeout={1000}>\n                <div className=\"containsData\">\n                  <br ></br>\n                  <table className=\"lesser2\">\n                    <tbody></tbody>\n                    <tr>\n                      <td>Nettolön</td>\n                      <td>{costs.lon} kr</td>\n                    </tr>\n                    <tr>\n                      <td>Skatt</td>\n                      <td>-{costs.avdrag} kr</td>\n                    </tr>\n                    <tr>\n                      <td>Skattetabell</td>\n                      <td>{kommun[1]}</td>\n                    </tr>\n                    <tr>\n                      <td>Kvar efter skatt</td>\n                      <td><b>{(costs.lon - costs.avdrag)} kr</b></td>\n                    </tr>\n                  </table>\n                  </div>\n \n                  </Fade>\n\n        </Paper>\n        </Fade>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}